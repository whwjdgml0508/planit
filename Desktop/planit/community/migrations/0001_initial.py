# Generated by Django 5.2.7 on 2025-10-04 04:41

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('timetable', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='카테고리명')),
                ('slug', models.SlugField(unique=True, verbose_name='슬러그')),
                ('category_type', models.CharField(choices=[('STUDY', '학습 자료'), ('EXAM', '시험 정보'), ('LECTURE', '강의 특성'), ('FITNESS', '체력평가'), ('ENGLISH', '영어 상식'), ('PROJECT', '프로젝트'), ('QNA', '질문답변'), ('FREE', '자유게시판'), ('NOTICE', '공지사항')], default='FREE', max_length=10, verbose_name='카테고리 유형')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('icon', models.CharField(default='fas fa-comments', max_length=50, verbose_name='아이콘')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='색상')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('order', models.IntegerField(default=0, verbose_name='정렬순서')),
                ('department_restricted', models.BooleanField(default=False, verbose_name='학과 제한')),
                ('allowed_departments', models.JSONField(blank=True, default=list, verbose_name='허용 학과')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '카테고리',
                'verbose_name_plural': '카테고리들',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='제목')),
                ('content', models.TextField(verbose_name='내용')),
                ('post_type', models.CharField(choices=[('NORMAL', '일반'), ('NOTICE', '공지'), ('URGENT', '긴급'), ('QUESTION', '질문'), ('RESOURCE', '자료')], default='NORMAL', max_length=10, verbose_name='게시글 유형')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='조회수')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='상단 고정')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('tags', models.JSONField(blank=True, default=list, verbose_name='태그')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='community.category', verbose_name='카테고리')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_posts', to=settings.AUTH_USER_MODEL, verbose_name='좋아요')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='community_posts', to='timetable.subject', verbose_name='관련 과목')),
            ],
            options={
                'verbose_name': '게시글',
                'verbose_name_plural': '게시글들',
                'ordering': ['-is_pinned', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(verbose_name='내용')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='community.comment', verbose_name='부모 댓글')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='community.post', verbose_name='게시글')),
            ],
            options={
                'verbose_name': '댓글',
                'verbose_name_plural': '댓글들',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='community/attachments/%Y/%m/', verbose_name='파일')),
                ('original_name', models.CharField(max_length=255, verbose_name='원본 파일명')),
                ('file_type', models.CharField(choices=[('IMAGE', '이미지'), ('DOCUMENT', '문서'), ('ARCHIVE', '압축파일'), ('OTHER', '기타')], default='OTHER', max_length=10, verbose_name='파일 유형')),
                ('file_size', models.PositiveIntegerField(verbose_name='파일 크기(bytes)')),
                ('download_count', models.PositiveIntegerField(default=0, verbose_name='다운로드 수')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='업로더')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='community.post', verbose_name='게시글')),
            ],
            options={
                'verbose_name': '첨부파일',
                'verbose_name_plural': '첨부파일들',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('SPAM', '스팸'), ('INAPPROPRIATE', '부적절한 내용'), ('HARASSMENT', '괴롭힘'), ('COPYRIGHT', '저작권 침해'), ('OTHER', '기타')], max_length=15, verbose_name='신고 유형')),
                ('reason', models.TextField(verbose_name='신고 사유')),
                ('status', models.CharField(choices=[('PENDING', '대기중'), ('REVIEWING', '검토중'), ('RESOLVED', '해결됨'), ('REJECTED', '기각됨')], default='PENDING', max_length=10, verbose_name='처리 상태')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='처리일시')),
                ('admin_note', models.TextField(blank=True, verbose_name='관리자 메모')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='community.comment', verbose_name='신고된 댓글')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='community.post', verbose_name='신고된 게시글')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL, verbose_name='신고자')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_reports', to=settings.AUTH_USER_MODEL, verbose_name='처리자')),
            ],
            options={
                'verbose_name': '신고',
                'verbose_name_plural': '신고들',
                'ordering': ['-created_at'],
            },
        ),
    ]
