# Generated by Django 5.2.7 on 2025-10-04 03:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('student_id', models.CharField(help_text='7자리 학번을 입력하세요', max_length=10, unique=True, validators=[django.core.validators.RegexValidator('^\\d{7}$', '학번은 7자리 숫자여야 합니다.')])),
                ('department', models.CharField(choices=[('AERO', '항공우주공학과'), ('MECH', '기계공학과'), ('ELEC', '전자공학과'), ('COMP', '컴퓨터공학과'), ('CIVIL', '토목공학과'), ('CHEM', '화학공학과'), ('MATH', '수학과'), ('PHYS', '물리학과'), ('ENG', '영어영문학과'), ('OTHER', '기타')], default='OTHER', max_length=10, verbose_name='학과')),
                ('grade', models.IntegerField(choices=[(1, '1학년'), (2, '2학년'), (3, '3학년'), (4, '4학년')], default=1, verbose_name='학년')),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^\\d{3}-\\d{4}-\\d{4}$', '전화번호 형식: 010-1234-5678')], verbose_name='전화번호')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='프로필 이미지')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='자기소개')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자들',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
